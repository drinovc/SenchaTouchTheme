/*
 * File: app/view/MainView.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SenchaTouchTheme.view.MainView', {
    extend: 'Ext.Container',
    alias: 'widget.mainview',

    requires: [
        'Ext.Button',
        'Ext.dataview.List',
        'Ext.XTemplate',
        'Ext.navigation.View',
        'Ext.navigation.Bar'
    ],

    config: {
        layout: 'hbox',
        items: [
            {
                xtype: 'titlebar',
                cls: 'md-shadow',
                docked: 'top',
                zIndex: 1,
                title: 'Custom Theme',
                items: [
                    {
                        xtype: 'button',
                        align: 'right',
                        itemId: 'btnHelp',
                        ui: 'plain',
                        iconCls: 'fa fa-question',
                        text: ''
                    }
                ]
            },
            {
                xtype: 'container',
                cls: 'border-right',
                ui: 'dark',
                width: 300,
                items: [
                    {
                        xtype: 'list',
                        data: [
                            {
                                title: 'Buttons',
                                view: 'Buttons'
                            },
                            {
                                title: 'Carousel',
                                view: 'Carousel'
                            },
                            {
                                title: 'Fields and Radios',
                                view: 'FieldsAndRadios'
                            },
                            {
                                title: 'Font Awesome',
                                view: 'FontAwesome'
                            },
                            {
                                title: 'Forms and Panels',
                                view: 'FormsAndPanels'
                            },
                            {
                                title: 'List',
                                view: 'List'
                            },
                            {
                                title: 'List Buffered',
                                view: 'ListBuffered'
                            },
                            {
                                title: 'List Round',
                                view: 'ListRound'
                            },
                            {
                                title: 'Login',
                                view: 'Login'
                            },
                            {
                                title: 'Load Mask',
                                view: 'LoadMask'
                            },
                            {
                                title: 'Overlays',
                                view: 'Overlays'
                            },
                            {
                                title: 'Tabs',
                                view: 'Tabs'
                            },
                            {
                                title: 'Toolbars',
                                view: 'Toolbars'
                            },
                            {
                                title: 'Backgrounds',
                                view: 'Backgrounds'
                            }
                        ],
                        height: '100%',
                        itemId: 'navList',
                        itemTpl: [
                            '<div>{title}</div>'
                        ]
                    }
                ]
            },
            {
                xtype: 'navigationview',
                flex: 3,
                itemId: 'mainContent',
                margin: 20,
                layout: {
                    type: 'card',
                    animation: false,
                    'animation.direction': 'down'
                },
                navigationBar: {
                    docked: 'bottom',
                    hidden: true
                }
            }
        ],
        listeners: [
            {
                fn: 'onContainerInitialize',
                event: 'initialize'
            }
        ]
    },

    onContainerInitialize: function(component, eOpts) {
        // ON MOUSE WHEEL - scrolling any list and grid with mouse
        document.body.addEventListener("mousewheel", function(e) {
            var view = component;
            var dY = -e.wheelDelta;
            var el = Ext.get(e.target);
            var cmp;

            do {
                el = el.getParent();
                if(el.classList && !el.classList.includes("no-mouse-scroll-fix") &&
                   (el.classList.includes("x-list") || el.classList.includes("x-grid") || el.classList.includes("x-form") || el.classList.includes("mouse-scroll-fix"))) {

                    cmp = Ext.getCmp(el.id);
                }
            } while(!cmp && el.id != "VMain" && el != el.getParent());

            if(cmp) {
                var scroller = cmp.getScrollable().getScroller();
                var end = scroller.getSize().y - scroller.getContainerSize().y;

                if(end <= 0) { // don't scroll if nothing to scroll
                    console.log("Nothing to scroll");
                    return;
                }

                cmp.getScrollable().showIndicators(); // show scroll indicators - maybe hide them after ???

                if(dY > 0) { // scroll down
                    if(scroller.position.y + dY <= end) { // don't scroll over bottom
                        scroller.scrollBy(0, dY, false);
                    }
                    else {
                        scroller.scrollToEnd();
                    }
                    Ext.defer(cmp.getScrollable().hideIndicators, 1000, cmp.getScrollable());
                }
                else { // scroll up
                    if(scroller.position.y + dY > 0) { // don't scroll over top
                        scroller.scrollBy(0, dY, false);
                    }
                    else {
                        scroller.scrollToTop();
                    }
                    Ext.defer(cmp.getScrollable().hideIndicators, 1000, cmp.getScrollable());
                }
            }
        });
    }

});